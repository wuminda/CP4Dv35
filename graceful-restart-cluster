https://docs.openshift.com/container-platform/4.5/backup_and_restore/graceful-cluster-restart.html#graceful-restart-cluster
https://docs.openshift.com/container-platform/4.5/backup_and_restore/graceful-cluster-shutdown.html

Ensure you know what state the cluster is in
What state pods are in
oc get pods --all-namespaces
oc get pods –all-namespaces | grep –Ev ‘1/1|2/2|3/3|4/4’ | grep –v ‘completed’
What state my nodes are in
oc get nodes --show-labels
Knowing what is working and what isn’t is important when it comes to knowing what ‘the same as before’ looks like after you have started the cluster again.
Recommendation is to resolve any issues in the cluster before proceeding– For example oc get nodes should show that all nodes are ready

Cordon all of your worker nodes to prevent new pods from starting or moving：
oc adm cordon <node>

Drain all of your worker nodes
oc adm drain <node> --ignore-daemonsets --force --grace-period=30 --delete-local-data
This forces pods to stop, ignores any daemonsets that are running on the nodes, enforces a graceful termination period of 30s for pods to stop gracefully and removes any pods with local ephemeral data.

登陆到bastion,ssh core@$node 这里$node换成对应ip

按顺序一台一台关，先workers 后master
Gracefully shut down all the workers first (sudo shutdown –h now,)
如果没有，可忽略 Gracefully shutdown all the infra nodes (sudo shutdown –h now)
如果没有，可忽略 Gracefully shutdown etcd nodes one by one
Gracefully shutdown all the masters (sudo shutdown –h now)

如果需要接着关 lb，nfs 和bastion，关机都要shutdown –h now

启动的时候反过来，先启动lb，nfs,bastion
先启动master，等master服务都起来后，可以等五分钟，再启动 worker
Start Masters and wait for them to be ready (oc get nodes)
如果没有，可忽略 Stat etcd
如果没有，可忽略 Start Infra nodes and wait for them to be ready (oc get nodes)
Start the worker nodes


登录到 NFS/LB 节点
systemctl status nfs-server
systemctl status rpcbind
systemctl status named-chroot
systemctl status haproxy
systemctl status chronyd
systemctl status firewalld

除了firewalld是disable以外，其他都是启动的
exportfs -rav

登录到 Bastion 节点
export KUBECONFIG=/ibm/installation_directory/auth/kubeconfig
oc login https://xxx.com:6443 -u xxx -p xxx
oc whoami
oc get nodes --show-labels
oc get pods --all-namespaces | grep –Ev ‘1/1|2/2|3/3|4/4’ | grep –v ‘completed’


NFS pod需要image
podman load -i /ocp4_downloads/registry/images/registry2.tar
podman run --name mirror-registry --publish $REGISTRY_PORT:5000 --detach --volume /ocp4_downloads/registry/data:/var/lib/registry:z --volume /ocp4_downloads/registry/auth:/auth:z --volume /ocp4_downloads/registry/certs:/certs:z --env "REGISTRY_AUTH=htpasswd" --env "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" --env REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd --env REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.crt --env REGISTRY_HTTP_TLS_KEY=/certs/registry.key docker.io/library/registry:2
Add certificate to trusted store on the new registry server
